#!/usr/bin/env node

const minimist=require('minimist');
const RcRepo=require("../src/RcRepo");

async function main() {
	let argv=minimist(process.argv.slice(2),{
		"boolean": ["dry-run","local"]
	});

	let rcRepo=new RcRepo();
	let cmd=argv._[0];
	argv._=argv._.slice(1);

	switch (cmd) {
		case "init":
			await rcRepo.init(argv);
			break;

		case "addremote":
			await rcRepo.addRemote(argv);
			break;

		case "rmremote":
			await rcRepo.rmRemote(argv);
			break;

		case "status":
			await rcRepo.status(argv);
			break;

		case "sync":
			await rcRepo.sync(argv);
			break;

		default:
			console.log("rcrepo - Sync local and remote repositories of files using rclone.");
			console.log("Usage: rcrepo <command> [options]");
			console.log("");
			console.log("Commands:");
			console.log("  init                      - Create local repo.");
			console.log("  addremote <remote:path>   - Initialize and sync remote path.")
			console.log("  rmremote <remote:path>    - Remove remote path.")
			console.log("  status                    - Show status of local and remote files.");
			console.log("  sync                      - Sync files.");
			break;
	}
}

main();